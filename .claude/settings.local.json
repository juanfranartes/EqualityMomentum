{
  "permissions": {
    "allow": [
      "Bash(\"C:\\Users\\juanf\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"\nimport sys\nsys.path.insert(0, r''c:\\Users\\juanf\\Documentos\\GitHub\\EqualityMomentum\\04_SCRIPTS'')\n\nfrom generar_informe_optimizado import GeneradorInformeOptimizado, COLS\nimport pandas as pd\n\n# Cargar archivo de ejemplo\narchivo = r''c:\\Users\\juanf\\Documentos\\GitHub\\EqualityMomentum\\02_RESULTADOS\\REPORTE_DATOS registro retributivo_20251029_211752.xlsx''\n\n# Verificar las columnas en el archivo\nprint(''Verificando columnas en el archivo...'')\ndf = pd.read_excel(archivo, sheet_name=''DATOS_PROCESADOS'', nrows=5)\ndf.columns = df.columns.str.rstrip()\n\nprint(''\\n=== Verificación de columnas críticas ==='')\nfor key, col_name in COLS.items():\n    if col_name in df.columns:\n        print(f''✓ {key}: \"\"{col_name}\"\" ENCONTRADA'')\n    else:\n        print(f''✗ {key}: \"\"{col_name}\"\" NO ENCONTRADA'')\n        # Buscar columnas similares\n        similar = [c for c in df.columns if col_name.replace('' Total'', '''') in c]\n        if similar:\n            print(f''  Columnas similares: {similar}'')\n\nprint(''\\n=== Prueba de carga con GeneradorInformeOptimizado ==='')\ngenerador = GeneradorInformeOptimizado()\nif generador.cargar_datos_desde_archivo(archivo):\n    print(''✓ Carga exitosa'')\n    print(f''  Registros cargados: {len(generador.df)}'')\n    \n    # Verificar columnas después de la carga\n    print(''\\n=== Columnas después de normalización ==='')\n    for key, col_name in COLS.items():\n        if col_name in generador.df.columns:\n            print(f''✓ {key}: \"\"{col_name}\"\" OK'')\n        else:\n            print(f''✗ {key}: \"\"{col_name}\"\" FALTA'')\nelse:\n    print(''✗ Error en la carga'')\n\")"
    ],
    "deny": [],
    "ask": []
  }
}
